version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: portplay-postgres
    environment:
      POSTGRES_DB: portplay
      POSTGRES_USER: portplay
      POSTGRES_PASSWORD: portplay123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - portplay-network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: portplay-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - portplay-network

  # PortPlay server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: portplay-server
    environment:
      NODE_ENV: development
      PORT: 4000
      DATABASE_URL: postgres://portplay:portplay123@postgres:5432/portplay
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-secret-key-change-in-production
      FRONTEND_URL: http://localhost:3000
    ports:
      - "4000:4000"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - portplay-network
    command: npm run dev

  # PortPlay frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: portplay-frontend
    environment:
      VITE_API_URL: http://localhost:4000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - portplay-network
    command: npm run dev

  # Asset CDN (simple static server)
  cdn:
    image: nginx:alpine
    container_name: portplay-cdn
    ports:
      - "8080:80"
    volumes:
      - ./assets:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - portplay-network

volumes:
  postgres_data:
  redis_data:

networks:
  portplay-network:
    driver: bridge
